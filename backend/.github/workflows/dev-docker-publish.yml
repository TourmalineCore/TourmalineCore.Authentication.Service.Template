name: Push docker image to Azure registry and deploy image to Azure to dev

on:
  push:
    branches:
      - develop

    tags:
      - v*

  pull_request:

env:
  GUTHUB_REGISTRY: ghcr.io

jobs:
  docker-push:
    runs-on: ubuntu-18.04
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      - name: Build and push image
      - run: |
            docker login -u ${{ github.actor }} -p ${{ secrets.GH_TOKEN }} ${{ env.GUTHUB_REGISTRY }}
            docker build -t ${{ env.GUTHUB_REGISTRY }}/tourmalinecore/templates/auth:latest -t ${{ env.GUTHUB_REGISTRY }}/tourmalinecore/templates/auth:${{ github.sha }} -f TourmalineCore.Authentication.Service/Dockerfile .
            docker push ${{ env.GUTHUB_REGISTRY }}/tourmalinecore/templates/auth:latest
            docker push ${{ env.GUTHUB_REGISTRY }}/tourmalinecore/templates/auth:${{ github.sha }}
  deploy-to-dev-k8s:
    needs: docker-push
    name: Deploy service to k8s for development environment
    runs-on: ubuntu-18.04

    steps:
      - name: Run helm charts for pushing image to dev
        uses: 

helm-lint:
   name: Helm lint and release
   runs-on: ubuntu-latest
   needs: build
   steps:
     - name: Helm install
       uses: WyriHaximus/github-action-helm3@v2
       with:
         exec: - helm upgrade --namespace dev --install auth-api 
                --set "aspnetcoreEnvironment=Development"
                --set "deployment.appsettings.ConnectionStrings.DefaultConnection=${PostgreSQLConnectionString}"
                --set "ingress.host=${Host}"
                --set "imageCredentials.username=${{ github.actor }}" 
                --set "imageCredentials.password=${{ secrets.GH_TOKEN }}" 
                --set "image.tag=${{ github.sha }}"
                --set "image.pullPolicy=Always"
                ./TourmalineCore.Authentication.Service/ci/chart
         kubeconfig: '${{ secrets.KUBECONFIG }}'
